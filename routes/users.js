const express = require('express');
const db = require('../db'); // <-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤ path ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ DB ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
const router = express.Router();


// GET - ‡∏î‡∏∂‡∏á‡∏™‡∏•‡∏≤‡∏Å‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ö‡∏≠‡∏Å‡∏ñ‡∏π‡∏Å‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•/‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•/‡πÄ‡∏á‡∏¥‡∏ô‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏• ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á lotto_item_id ‡∏°‡∏≤‡∏î‡πâ‡∏ß‡∏¢
router.get('/:userId/tickets', async (req, res) => {
  const { userId } = req.params;
  if (!userId) return res.status(400).json({ message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ User ID' });

  const connection = await db.getConnection();
  try {
    const sql = `
      SELECT
        li.loto_id                              AS lotto_item_id,   -- üëà ‡∏™‡πà‡∏á id ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏õ‡πÉ‡∏ä‡πâ‡πÄ‡∏Ñ‡∏•‡∏°
        lt.ticket_number                        AS ticket_number,
        li.status                               AS status,          -- e.g. 'new' | 'claimed'
        li.draw_date                            AS draw_date,
        pt.name                                 AS prize_name,
        COALESCE(pt.reward, 0)                  AS reward,
        CASE WHEN p.lotto_item_id IS NOT NULL
             THEN 1 ELSE 0 END                  AS is_winner
      FROM lotto_item li
      JOIN lotto_tickets lt
        ON li.ticket_id = lt.id
      LEFT JOIN prizes p
        ON p.lotto_item_id = li.loto_id
      LEFT JOIN prizes_type pt
        ON p.prizes_type = pt.ptype_id
      WHERE li.userid = ?
      ORDER BY li.loto_id DESC;
    `;

    const [rows] = await connection.execute(sql, [userId]);

    // ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡πâ‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢‡πÉ‡∏ô‡∏ù‡∏±‡πà‡∏á‡πÅ‡∏≠‡∏õ
    const out = rows.map(r => ({
      lotto_item_id : r.lotto_item_id,          // üëà ‡πÅ‡∏≠‡∏õ‡∏à‡∏∞‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏µ‡∏¢‡πå‡∏ô‡∏µ‡πâ (‡∏´‡∏£‡∏∑‡∏≠ 'loto_id' ‡∏Å‡πá‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡∏Ñ‡∏µ‡∏¢‡πå‡∏ô‡∏µ‡πâ‡∏ä‡∏±‡∏î‡∏Å‡∏ß‡πà‡∏≤)
      ticket_number : r.ticket_number,
      status        : r.status,
      draw_date     : r.draw_date,              // ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏ï‡∏£‡∏¥‡∏á date ‡πÄ‡∏™‡∏°‡∏≠ ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏¥‡∏î dateStrings ‡πÉ‡∏ô config MySQL
      is_winner     : !!r.is_winner,
      prize_name    : r.prize_name || null,
      reward        : Number(r.reward || 0),
    }));

    res.status(200).json(out);
  } catch (err) {
    console.error('Get user tickets error:', err);
    res.status(500).json({ message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏•‡∏≤‡∏Å' });
  } finally {
    connection.release();
  }
});

module.exports = router;


module.exports = router;